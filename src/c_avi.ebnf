// TODO 要處理 Unary 的狀況，或是說可以先無視

<Program> ::= <Block>

<Block> ::= int main ( ) <CompoundStatement>

<CompoundStatement> ::= { <StatementList> }

<StatementList> ::= <Statement> <StatementList> | epsilon

<Statement> ::= <AssignmentStatement> ;
              | <CompoundStatement>
              | <DeclareStatement> ;
              | epsilon

<AssignmentStatement> ::= <Identifier> = <Expression>

<DeclareStatement> ::= <Type> <Identifier> [= <Expression>]

<Expression> ::= <Term> <ExpressionPrime>

<ExpressionPrime> ::= + <Term> <ExpressionPrime>
                    | - <Term> <ExpressionPrime>
                    | epsilon

<Term> ::= <Factor> <TermPrime>

<TermPrmie> ::= * <Factor> <TermPrime>
              | / <Factor> <TermPrime>
              | epsilon

<Factor> ::= <Identifier> | <Number> | ( <Expression> )

<Identifier> ::= <Alpha> { <Alpha> | <Digit> } // TODO : 修改一下這邊的 production，不要用 EBNF 的 '{'

<Number> ::= <Digit> { <Digit> }                    

<Type> ::= int | char

<Alpha> ::= A|B|C|D|E|F|G|H|I|J|K|L|M|N|O|P|Q|R|S|T|U|V|W|X|Y|Z|a|b|c|d|e|f|g|h|i|j|k|l|m|n|o|p|q|r|s|t|u|v|w|x|y|z

<Digit> ::= 0|1|2|3|4|5|6|7|8|9                  

